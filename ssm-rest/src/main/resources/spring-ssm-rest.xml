<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!--解决静态资源访问问题，@RestController找不到对应路径问题-->
	<mvc:annotation-driven/>
	<!-- 扫描指定包带@Controller注解的类-->
	<context:component-scan base-package="com.xes.live.*"></context:component-scan>
	<!--&lt;!&ndash; 完成请求和注解POJO的映射 &ndash;&gt;-->
	<!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />-->
	<!-- 拦截器 -->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 对所有的请求拦截使用/** ,对某个模块下的请求拦截使用：/myPath/* &ndash;&gt;-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**" />-->
            <!--<mvc:exclude-mapping path="/resources/**"/>-->
            <!--<ref bean="stopWatchInterceptor" />-->
        <!--</mvc:interceptor>-->
        <!---->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**" />-->
            <!--<mvc:exclude-mapping path="/resources/**"/>-->
            <!--<ref bean="dataSourceInterceptor" />-->
        <!--</mvc:interceptor>-->
        <!---->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.xes.live.interceptor.AllowOriginIntecepror"/>-->
        <!--</mvc:interceptor>-->
        <!---->
    <!--</mvc:interceptors>-->
    <!---->
    <!--<bean id="dataSourceInterceptor"  class="com.xes.live.interceptor.DataSourceInterceptor"/>-->
    <!--<bean id="stopWatchInterceptor"  class="com.xes.live.interceptor.StopWatchInterceptor"/>-->
	</beans>